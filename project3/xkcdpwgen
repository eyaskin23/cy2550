#!/usr/bin/env python3

import argparse
import random

def generate_password():
    parser = argparse.ArgumentParser(description="Generate a secure, memorable password using the XKCD method")
    parser.add_argument("-w", "--words", help="include WORDS words in the password (default=4)", dest="num_words", type=int, default=4)
    parser.add_argument("-c", "--caps", help="capitalize the first letter of CAPS random words (default=0)", dest="num_caps", type=int, default=0)
    parser.add_argument("-n", "--numbers", help="insert NUMBERS random numbers in the password (default=0)", dest="num_numbers", type=int, default=0)
    parser.add_argument("-s", "--symbols", help="insert SYMBOLS random symbols in the password (default=0)", dest="num_symbols", type=int, default=0)
    args = parser.parse_args()

    # Read words and strips, then appends to word_list
    with open("words.txt", "r") as f:
        word_list = [line.strip() for line in f]

    password_list = []

    # Handles capitalization argument
    for _ in range(args.num_words):
        if args.num_caps > 0:
            password_list.append(random.choice(word_list).capitalize())
            args.num_caps -= 1
        else:
            password_list.append(random.choice(word_list))

    # Handles numbers argument
    if args.num_numbers > 0:
        number_list = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
        for _ in range(args.num_numbers):
            password_list.append(random.choice(number_list))

    # Handles symbols argument
    if args.num_symbols > 0:
        symbol_list = ['!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '-', '+', '=', ':', ';', ',', '.', '?', '/']
        for _ in range(args.num_symbols):
            password_list.append(random.choice(symbol_list))

    # Shuffles the password list
    password = random.sample(password_list, len(password_list))

    print("".join(password))

if __name__ == '__main__':
    generate_password()
